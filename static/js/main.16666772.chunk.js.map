{"version":3,"sources":["components/Button.js","containers/CounterComponent.js","actions/index.js","reducers/CounterReducer.js","reducers/index.js","store/index.js","index.js"],"names":["Button","props","react_default","a","createElement","onClick","action","buttonTitle","CounterComponent","handleBtnActionIncrement","_this","onIncrementClick","count","handleBtnActionDecrement","onDecrementClick","handleBtnActionButton","addname","nom","_this$props","this","components_Button","Component","connect","state","counter","dispatch","type","incrementCount","decrementCount","document","getElementById","value","initialState","CounterReducer","arguments","length","undefined","Object","objectSpread","combineReducers","store","createStore","rootReducer","applyMiddleware","logger","render","es","containers_CounterComponent"],"mappings":"mOAWeA,EATA,SAACC,GAEZ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,QAAWJ,EAAMK,QAAUL,EAAMM,eCD/CC,6MAENC,yBAA2B,WACzBC,EAAKT,MAAMU,iBAAiBD,EAAKT,MAAMW,UAGzCC,yBAA2B,WACzBH,EAAKT,MAAMa,iBAAiBJ,EAAKT,MAAMW,UAEzCG,sBAAwB,WACtBL,EAAKT,MAAMe,QAAQN,EAAKT,MAAMgB,8EAIvB,IAAAC,EACWC,KAAKlB,MAAhBW,EADAM,EACAN,MAAMK,EADNC,EACMD,IACb,OACCf,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,WACMF,EAAAC,EAAAC,cAAA,oBAAYQ,GACXK,EACDf,EAAAC,EAAAC,cAACgB,EAAD,CAAQd,OAAQa,KAAKV,yBAA0BF,YAAc,MAE7DL,EAAAC,EAAAC,cAACgB,EAAD,CAAQd,OAAQa,KAAKN,yBAA0BN,YAAc,eAvBpCc,aAuDhBC,cAvBS,SAACC,GACvB,MAAO,CACLX,MAAOW,EAAMC,QAAQZ,MACrBK,IAAIM,EAAMC,QAAQP,MAIK,SAACQ,GAC1B,MAAO,CACLd,iBAAkB,SAACC,GACjBa,EC/CwB,SAACb,GAE3B,MAAO,CACPc,KAAM,kBACNd,MAHYA,EAAM,GD8CPe,CAAef,KAE1BE,iBAAkB,SAACF,GACJ,IAAVA,GACHa,EC3C0B,SAAAb,GAE5B,MAAO,CACLc,KAAM,kBACNd,MAHUA,EAAQ,GD0CTgB,CAAehB,KAE1BI,QAAS,WACPS,ECpCK,CACLC,KAAM,UACNT,IAHUY,SAASC,eAAe,OAAOC,WD2ChCT,CAA6Cd,kCE5DtDwB,EAAe,CACjBpB,MAAO,GAmBIqB,MAhBf,WAAsD,IAA7BV,EAA6BW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBF,EAAc1B,EAAO4B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAO9B,EAAOoB,MACV,IAAK,kBAGL,IAAK,kBAGL,IAAK,UACD,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GAAId,EAAUjB,GAEzB,QACI,OAAOiB,ICbJgB,cAAgB,CAC3Bf,QAASS,ICIEO,EAJDC,YAAYC,EAAaC,YACnCC,YCCJC,iBACE3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUN,MAAOA,GACftC,EAAAC,EAAAC,cAAC2C,EAAD,OAEFlB,SAASC,eAAe","file":"static/js/main.16666772.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <button onClick = {props.action} >{props.buttonTitle}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport Button from '../components/Button';\r\nimport {connect} from 'react-redux';\r\nimport {incrementCount, decrementCount,addname} from '../actions/index';\r\n\r\nclass CounterComponent extends Component{\r\n\r\nhandleBtnActionIncrement = () => {\r\n  this.props.onIncrementClick(this.props.count)\r\n}\r\n\r\nhandleBtnActionDecrement = () => {\r\n  this.props.onDecrementClick(this.props.count)\r\n}\r\nhandleBtnActionButton = () => {\r\n  this.props.addname(this.props.nom)\r\n}\r\n\r\n\r\nrender() {\r\n  const {count,nom}=this.props\r\n  return(\r\n   <div>\r\n<div>\r\n      <h1>Count: {count}</h1>\r\n      {nom}\r\n      <Button action={this.handleBtnActionIncrement} buttonTitle = \"+\" />\r\n    \r\n      <Button action={this.handleBtnActionDecrement} buttonTitle = \"-\" />\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    count: state.counter.count,\r\n    nom:state.counter.nom\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIncrementClick: (count) => {  \r\n      dispatch(incrementCount(count))\r\n    },\r\n    onDecrementClick: (count) => {\r\n      if(count !== 0) \r\n      dispatch(decrementCount(count))\r\n    },\r\n    addname: () => {\r\n      dispatch(addname())\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterComponent);","export const incrementCount = (count) => {\r\n    const num = count+1\r\n    return {\r\n    type: 'INCREMENT_COUNT',\r\n    count: num\r\n    }\r\n  }\r\n  \r\n  export const decrementCount = count => {\r\n    const num = count - 1\r\n    return {\r\n      type: 'DECREMENT_COUNT',\r\n      count: num\r\n    }\r\n  }\r\n\r\n  export const addname = () => {\r\n    const num = document.getElementById(\"nom\").value;\r\n    return {\r\n      type: 'ADD_NOM',\r\n      nom: num\r\n    }\r\n  }","const initialState = {\r\n    count: 0,\r\n}\r\n\r\nfunction CounterReducer (state = initialState, action){\r\n    switch(action.type){\r\n        case \"INCREMENT_COUNT\": {\r\n            return {...state, ...action}\r\n        }\r\n        case \"DECREMENT_COUNT\": {\r\n            return {...state, ...action}\r\n        }\r\n        case \"ADD_NOM\": {\r\n            return {...state, ...action}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\nexport default CounterReducer;","import {combineReducers} from 'redux';\r\nimport CounterReducer from '../reducers/CounterReducer';\r\n\r\nexport default combineReducers({\r\n    counter: CounterReducer,\r\n})","import {applyMiddleware, createStore} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(\r\n    logger\r\n))\r\n\r\nexport default store;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport CounterComponent from './containers/CounterComponent';\nimport store from './store';\nimport './App.css';\nrender(\n  <Provider store={store}>\n    <CounterComponent />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}